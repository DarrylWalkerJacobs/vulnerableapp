using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.Mvc.RazorPages;
using Microsoft.Extensions.Logging;
using Npgsql;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;

namespace VulnerabilityScannerTestApp.Pages
{
    public class IndexModel : PageModel
    {
        private readonly ILogger<IndexModel> _logger;

        public IndexModel(ILogger<IndexModel> logger)
        {
            _logger = logger;
        }

        [FromQuery(Name = "name")]
        public string Name { get; set; }

        [FromQuery(Name = "searchterm")]
        public string SearchTerm { get; set; }

        public async Task OnGetAsync()
        {
            if (this.SearchTerm is null)
            {
                return;
            }
            // Vulnerability: Credentials (database password) stored in code
            var connection = new NpgsqlConnection("Host=localhost;Database=hack_this_database;Username=postgres;Password=h;Integrated Security=true;Pooling=true;SSL Mode=Require;Trust Server Certificate=true;ApplicationName=VelocityVMProd;");
            await connection.OpenAsync();
            // Vulnerability: SQL Injection 
            await using var cmd = new NpgsqlCommand(
                $"SELECT * FROM " +
                $"public.some_table " +
                $"WHERE some_column = '${SearchTerm}'", connection);
            cmd.Parameters.AddWithValue("p", "Hello world");
            await cmd.ExecuteNonQueryAsync();

        }
    }
}
